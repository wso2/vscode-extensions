{
    "name": "ballerina",
    "displayName": "Ballerina",
    "description": "Ballerina Language support, debugging, graphical visualization, AI-based data-mapping and many more.",
    "version": "5.2.0",
    "publisher": "wso2",
    "icon": "resources/images/ballerina.png",
    "homepage": "https://wso2.com/ballerina/vscode/docs",
    "bugs": {
        "url": "https://github.com/wso2/ballerina-plugin-vscode/issues"
    },
    "qna": "https://discord.com/invite/ballerinalang",
    "galleryBanner": {
        "color": "#e7eaeb",
        "theme": "light"
    },
    "engines": {
        "vscode": "^1.83.1"
    },
    "categories": [
        "Programming Languages",
        "Debuggers",
        "Formatters",
        "Snippets"
    ],
    "activationEvents": [
        "onLanguage:ballerina",
        "onCommand:ballerina.showExamples",
        "workspaceContains:**/Ballerina.toml",
        "onNotebook:ballerina-notebook",
        "onUri"
    ],
    "extensionDependencies": [
        "anweber.httpbook",
        "WSO2.wso2-platform"
    ],
    "contributes": {
        "languages": [
            {
                "id": "ballerina",
                "aliases": [
                    "Ballerina",
                    "ballerina"
                ],
                "extensions": [
                    ".bal"
                ],
                "configuration": "./ballerina.configuration.json",
                "icon": {
                    "light": "./resources/images/icons/ballerina.svg",
                    "dark": "./resources/images/icons/ballerina-inverse.svg"
                }
            },
            {
                "id": "toml",
                "aliases": [
                    "Toml",
                    "toml"
                ],
                "extensions": [
                    ".toml"
                ]
            },
            {
                "id": "x-ballerina-output-log"
            }
        ],
        "grammars": [
            {
                "language": "ballerina",
                "scopeName": "source.ballerina",
                "path": "./grammar/ballerina-grammar/syntaxes/ballerina.tmLanguage"
            }
        ],
        "configuration": {
            "type": "object",
            "title": "Ballerina Extension",
            "properties": {
                "ballerina.pluginDevMode": {
                    "type": "boolean",
                    "default": false,
                    "description": "Enable plugin development mode."
                },
                "ballerina.home": {
                    "type": "string",
                    "default": "",
                    "description": "Specify the Ballerina home directory path."
                },
                "ballerina.isBI": {
                    "type": "boolean",
                    "default": false,
                    "scope": "resource",
                    "description": "Activate features for WSO2 Integrator: BI."
                },
                "ballerina.scope": {
                    "type": "string",
                    "default": "any",
                    "scope": "resource",
                    "description": "Define the scope of the project.",
                    "enum": [
                        "automation",
                        "ai-agent",
                        "integration-as-api",
                        "event-integration",
                        "file-integration",
                        "any"
                    ],
                    "enumDescriptions": [
                        "Automation",
                        "AI Agent",
                        "Integration as API",
                        "Event Integration",
                        "File Integration",
                        "Any"
                    ]
                },
                "ballerina.debugLog": {
                    "type": "boolean",
                    "default": false,
                    "description": "Enable printing debug messages on to the Ballerina output channel."
                },
                "ballerina.enableLiveReload": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable automatic re-run of Ballerina service projects upon file changes."
                },
                "ballerina.traceLog": {
                    "type": "boolean",
                    "default": false,
                    "description": "Enable printing trace messages on to the Ballerina output channel."
                },
                "ballerina.codeLens.all.enabled": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable all code lens features."
                },
                "ballerina.enableFileWatcher": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable watching file change events of the project."
                },
                "ballerina.enableTelemetry": {
                    "type": "boolean",
                    "default": true,
                    "markdownDescription": "Enable Ballerina telemetry."
                },
                "ballerina.enableSemanticHighlighting": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable semantic highlighting for Ballerina source."
                },
                "ballerina.enableBackgroundDriftCheck": {
                    "type": "boolean",
                    "default": false,
                    "description": "Enable background drift check for Ballerina source.",
                    "tags": [
                        "experimental"
                    ]
                },
                "ballerina.enablePerformanceForecast": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable real-time performance forecasting."
                },
                "ballerina.enableLanguageServerDebug": {
                    "type": "boolean",
                    "default": false,
                    "description": "Enable Language Server debug mode."
                },
                "ballerina.experimental": {
                    "type": "boolean",
                    "default": false,
                    "description": "Enable experimental features."
                },
                "ballerina.enableNotebookDebug": {
                    "type": "boolean",
                    "default": false,
                    "description": "Enable notebook debug mode."
                },
                "ballerina.enableRunFast": {
                    "type": "boolean",
                    "default": false,
                    "description": "Enable faster execution by using the Language Server's compilation cache to reduce startup time.",
                    "tags": [
                        "experimental"
                    ]
                },
                "ballerina.samplesDownloadDirectory": {
                    "type": "string",
                    "default": "",
                    "description": "Specify the directory where you want to download the Ballerina samples. Leave it empty to use the default download directory."
                },
                "ballerina.enableInlayHints": {
                    "type": "boolean",
                    "default": false,
                    "description": "Experimental: Enable inlay hints for Ballerina."
                },
                "ballerina.useDistributionLanguageServer": {
                    "type": "boolean",
                    "default": false,
                    "description": "Use Ballerina distribution language server instead of bundled language server. Note: This will be automatically enabled for Ballerina versions older than 2201.12.3."
                },
                "ballerina.enableSequenceDiagramView": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable the experimental Sequence Diagram View.",
                    "tags": [
                        "experimental"
                    ]
                },
                "ballerina.enableAiSuggestions": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable AI suggestions in the Flow Diagram View."
                }
            }
        },
        "configurationDefaults": {
            "[ballerina]": {
                "editor.wordBasedSuggestions": false,
                "editor.suggest.snippetsPreventQuickSuggestions": false
            },
            "[toml]": {
                "editor.wordBasedSuggestions": false
            }
        },
        "breakpoints": [
            {
                "language": "ballerina"
            }
        ],
        "debuggers": [
            {
                "type": "ballerina",
                "label": "Ballerina Debug",
                "languages": [
                    "ballerina"
                ],
                "program": "/usr/local/Cellar/ballerina/0.991.0/libexec/lib/tools/debug-adapter/launcher/debug-adapter-launcher.sh",
                "configurationAttributes": {
                    "launch": {
                        "required": [],
                        "properties": {
                            "script": {
                                "type": "string",
                                "default": "${file}",
                                "description": "Path of the script that need to be executed (e.g. ${workspaceRoot}/main.bal)"
                            },
                            "programArgs": [],
                            "commandOptions": [],
                            "env": {},
                            "debugServerTimeout": {
                                "type": "integer",
                                "default": 5000,
                                "description": "How long to wait for the debug server to start up in milliseconds"
                            },
                            "debugTests": {
                                "type": "boolean",
                                "default": false,
                                "description": "Indicates whether to debug the tests for the given script."
                            },
                            "networkLogs": {
                                "type": "boolean",
                                "default": false,
                                "description": "Indicates whether to capture network logs."
                            },
                            "terminal": {
                                "type": "string",
                                "enum": [
                                    "integrated",
                                    "external"
                                ],
                                "enumDescriptions": [
                                    "Launch program in an integrated VSCode terminal.",
                                    "Launch program in an external terminal."
                                ],
                                "default": "integrated",
                                "description": "Indicates the terminal kind to launch the debugging process in."
                            }
                        }
                    },
                    "attach": {
                        "required": [
                            "debuggeePort",
                            "debuggeeHost"
                        ],
                        "properties": {
                            "debuggeeHost": {
                                "type": "string",
                                "description": "Remote debug server host",
                                "default": "127.0.0.1"
                            },
                            "debuggeePort": {
                                "type": "string",
                                "description": "Remote debug server port",
                                "default": "5005"
                            }
                        }
                    }
                },
                "initialConfigurations": [
                    {
                        "name": "Ballerina Debug",
                        "type": "ballerina",
                        "request": "launch",
                        "programArgs": [],
                        "commandOptions": [],
                        "env": {}
                    },
                    {
                        "name": "Ballerina Test",
                        "type": "ballerina",
                        "request": "launch",
                        "debugTests": true,
                        "programArgs": [],
                        "commandOptions": [],
                        "env": {}
                    },
                    {
                        "name": "Ballerina Remote",
                        "type": "ballerina",
                        "request": "attach",
                        "debuggeeHost": "127.0.0.1",
                        "debuggeePort": "5005"
                    }
                ]
            }
        ],
        "commands": [
            {
                "command": "ballerina.update-ballerina-dev-pack",
                "title": "Update Ballerina Nightly Build",
                "category": "Ballerina"
            },
            {
                "command": "ballerina.showExamples",
                "title": "Show Examples",
                "category": "Ballerina"
            },
            {
                "command": "ballerina.project.build",
                "title": "Build",
                "category": "Ballerina"
            },
            {
                "command": "ballerina.project.pack",
                "title": "Pack",
                "category": "Ballerina"
            },
            {
                "command": "ballerina.create.cloud",
                "title": "Create Cloud.toml",
                "category": "Ballerina"
            },
            {
                "command": "ballerina.login.copilot",
                "title": "Authorize Github Copilot",
                "category": "Ballerina"
            },
            {
                "command": "ballerina.reset.bi",
                "title": "Reset BI Auth",
                "category": "Ballerina"
            },
            {
                "command": "ballerina.project.doc",
                "title": "Build Documentation",
                "category": "Ballerina"
            },
            {
                "command": "ballerina.project.add",
                "title": "Add Module",
                "category": "Ballerina"
            },
            {
                "command": "ballerina.new.module",
                "title": "Add Module",
                "category": "Ballerina",
                "icon": "$(distro-new-module)"
            },
            {
                "command": "ballerina.refreshPackageTree",
                "title": "Refresh",
                "icon": "$(distro-refresh)"
            },
            {
                "command": "ballerina.refreshExplorerTree",
                "title": "Refresh",
                "icon": "$(distro-refresh)"
            },
            {
                "command": "ballerina.newFileExplorerTree",
                "title": "New File",
                "icon": "$(distro-new-file)"
            },
            {
                "command": "ballerina.newFolderExplorerTree",
                "title": "New Folder",
                "icon": "$(distro-new-folder)"
            },
            {
                "command": "ballerina.deleteFileExplorerTree",
                "title": "Delete",
                "icon": "$(distro-delete)"
            },
            {
                "command": "ballerina.show.visualizer",
                "title": "Show Visualizer",
                "icon": "$(distro-design-view)",
                "category": "Ballerina"
            },
            {
                "command": "ballerina.force.update.artifacts",
                "title": "Refresh",
                "icon": "$(distro-refresh)",
                "category": "Ballerina"
            },
            {
                "command": "ballerina.test.edit.case",
                "title": "Edit test case",
                "icon": "$(distro-design-view)",
                "category": "Ballerina"
            },
            {
                "command": "ballerina.project.run",
                "title": "Run",
                "icon": {
                    "dark": "./resources/images/icons/start-inverse.svg",
                    "light": "./resources/images/icons/start.svg"
                },
                "category": "Ballerina"
            },
            {
                "command": "ballerina.project.run.config",
                "title": "Run",
                "icon": {
                    "dark": "./resources/images/icons/start-inverse.svg",
                    "light": "./resources/images/icons/start.svg"
                }
            },
            {
                "command": "ballerina.project.stop",
                "title": "Stop",
                "category": "Ballerina"
            },
            {
                "command": "ballerina.source.debug",
                "title": "Debug",
                "icon": "$(distro-debug)",
                "category": "Ballerina"
            },
            {
                "command": "ballerina.show.source",
                "title": "Show Source",
                "icon": "$(code)",
                "category": "Ballerina"
            },
            {
                "command": "ballerina.pasteAsRecord",
                "title": "Paste JSON as Record",
                "category": "Ballerina"
            },
            {
                "command": "ballerina.verifyDocs",
                "title": "Check drift between code and documentation (Experimental)",
                "category": "Ballerina"
            },
            {
                "command": "ballerina.configureDefaultModelForNaturalFunctions",
                "title": "Configure default model for natural functions (Experimental)",
                "category": "Ballerina"
            },
            {
                "command": "ballerina.pasteXMLAsRecord",
                "title": "Paste XML as Record",
                "category": "Ballerina"
            },
            {
                "command": "ballerina.project.config.create",
                "title": "Create Config.toml",
                "category": "Ballerina"
            },
            {
                "command": "ballerina.notebook.restartNotebook",
                "title": "Restart Notebook",
                "icon": "$(distro-refresh)",
                "category": "Ballerina",
                "when": "notebookType == 'ballerina-notebook'"
            },
            {
                "command": "ballerina.notebook.openVariableView",
                "title": "Notebook Variables",
                "icon": "$(notebook)",
                "category": "Ballerina",
                "enablement": "notebookType == 'ballerina-notebook'"
            },
            {
                "command": "ballerina.notebook.openOutlineView",
                "title": "Notebook Outline",
                "icon": "$(list-unordered)",
                "category": "Ballerina",
                "enablement": "notebookType == 'ballerina-notebook'"
            },
            {
                "command": "ballerina.notebook.debug",
                "title": "Debug Cell",
                "category": "Ballerina",
                "enablement": "isNotebookDebugModeEnabled"
            },
            {
                "command": "ballerina.notebook.refreshVariableView",
                "title": "Refresh",
                "icon": "$(distro-refresh)",
                "category": "Ballerina",
                "enablement": "isNotebookVariableViewEnabled"
            },
            {
                "command": "ballerina.notebook.createNotebook",
                "title": "Create Notebook",
                "category": "Ballerina",
                "icon": "$(notebook)"
            },
            {
                "command": "ballerina.view.entityDiagram",
                "title": "Entity Relationship Diagram",
                "icon": "$(distro-persist-diagram)",
                "category": "Ballerina"
            },
            {
                "command": "ballerina.tryit",
                "title": "Open Try It",
                "category": "Ballerina",
                "icon": "$(server)"
            },
            {
                "command": "ballerina.open.ai.panel",
                "title": "Open AI Panel",
                "category": "Ballerina",
                "icon": {
                    "dark": "./resources/icons/light-ai-chat.svg",
                    "light": "./resources/icons/dark-ai-chat.svg"
                }
            },
            {
                "command": "ballerina.open.bi.welcome",
                "title": "Open Welcome",
                "category": "BI"
            },
            {
                "command": "ballerina.open.bi.new",
                "title": "New Integration",
                "category": "BI"
            },
            {
                "command": "BI.project.run",
                "title": "Run Integration",
                "icon": {
                    "dark": "./resources/images/icons/start-inverse.svg",
                    "light": "./resources/images/icons/start.svg"
                },
                "category": "BI"
            },
            {
                "command": "BI.project.debug",
                "title": "Debug Integration",
                "icon": {
                    "dark": "./resources/images/icons/debug-inverse.svg",
                    "light": "./resources/images/icons/debug.svg"
                },
                "category": "BI"
            },
            {
                "command": "BI.project-explorer.refresh",
                "title": "Refresh Ballerina",
                "category": "BI"
            },
            {
                "command": "BI.test.edit.function",
                "title": "View test flow",
                "icon": "$(distro-design-view)",
                "category": "BI"
            },
            {
                "command": "BI.test.edit.function.def",
                "title": "Edit test function definition",
                "icon": "$(edit)",
                "category": "BI"
            },
            {
                "command": "BI.test.add.function",
                "title": "Add test case",
                "icon": "$(add)",
                "category": "BI"
            },
            {
                "command": "BI.view.typeDiagram",
                "title": "Type Diagram",
                "category": "BI"
            },
            {
                "command": "BI.project-explorer.add-connection",
                "title": "Add Connection",
                "icon": "$(add)",
                "group": "navigation",
                "category": "BI"
            },
            {
                "command": "BI.project-explorer.delete",
                "title": "Delete",
                "icon": "$(trash)",
                "category": "BI"
            },
            {
                "command": "BI.project-explorer.add-entry-point",
                "title": "Add Entry Point",
                "icon": "$(add)",
                "group": "navigation",
                "category": "BI"
            },
            {
                "command": "BI.project-explorer.add-type",
                "title": "Add Types",
                "icon": "$(add)",
                "group": "navigation",
                "category": "BI"
            },
            {
                "command": "BI.project-explorer.view-type-diagram",
                "title": "View Type Diagram",
                "icon": "$(distro-design-view)",
                "group": "navigation",
                "category": "BI"
            },
            {
                "command": "BI.project-explorer.add-function",
                "title": "Add Function",
                "icon": "$(add)",
                "group": "navigation",
                "category": "BI"
            },
            {
                "command": "BI.project-explorer.add-configuration",
                "title": "Add Configuration",
                "icon": "$(add)",
                "group": "navigation",
                "category": "BI"
            },
            {
                "command": "BI.project-explorer.switch-project",
                "title": "Switch Project",
                "icon": "$(distro-switch-project)",
                "group": "navigation",
                "category": "BI"
            },
            {
                "command": "BI.project-explorer.add",
                "title": "Add Construct",
                "icon": "$(add)",
                "group": "navigation",
                "category": "BI"
            },
            {
                "command": "BI.project-explorer.overview",
                "title": "Show Overview",
                "icon": "$(distro-design-view)",
                "group": "navigation",
                "category": "BI"
            },
            {
                "command": "BI.project-explorer.add-data-mapper",
                "title": "Add Data Mapper",
                "icon": "$(add)",
                "group": "navigation",
                "category": "BI"
            },
            {
                "command": "BI.project-explorer.add-natural-function",
                "title": "Add Natural Function",
                "icon": "$(add)",
                "group": "navigation",
                "category": "BI"
            }
        ],
        "views": {
            "notebook-variables": [
                {
                    "type": "webview",
                    "id": "ballerinaViewVariables",
                    "name": "Variable View",
                    "when": "isNotebookVariableViewEnabled"
                }
            ]
        },
        "viewsWelcome": [
            {
                "view": "testing",
                "contents": "[Add Unit Test](command:BI.test.add.function)"
            }
        ],
        "viewsContainers": {
            "panel": [
                {
                    "id": "notebook-variables",
                    "title": "Ballerina Notebook",
                    "icon": "$(notebook)"
                }
            ]
        },
        "menus": {
            "testing/item/context": [
                {
                    "command": "BI.test.edit.function.def",
                    "group": "inline",
                    "when": "testId not in testGroups"
                },
                {
                    "command": "BI.test.edit.function",
                    "group": "inline",
                    "when": "testId not in testGroups"
                },
                {
                    "command": "BI.test.add.function",
                    "group": "inline",
                    "when": "testId in testGroups"
                }
            ],
            "view/title": [
                {
                    "command": "ballerina.notebook.refreshVariableView",
                    "when": "view == ballerinaViewVariables",
                    "group": "navigation"
                },
                {
                    "command": "BI.test.add.function",
                    "when": "view == workbench.view.testing",
                    "group": "navigation"
                }
            ],
            "editor/title": [
                {
                    "command": "ballerina.project.run",
                    "group": "navigation@1",
                    "title": "Run project in terminal",
                    "when": "resourceLangId == ballerina || isBallerinaDiagram"
                },
                {
                    "command": "ballerina.tryit",
                    "group": "navigation@1",
                    "title": "Open Try It",
                    "when": "isBIProjectRunning"
                },
                {
                    "command": "ballerina.project.run.config",
                    "group": "navigation@1",
                    "title": "Run project in terminal",
                    "when": "resourceLangId == toml && isBallerinaProject"
                },
                {
                    "command": "ballerina.source.debug",
                    "group": "navigation@2",
                    "title": "Debug project in terminal",
                    "when": "resourceLangId == ballerina"
                },
                {
                    "when": "resourceLangId == ballerina && !isPersistModelActive",
                    "command": "ballerina.show.visualizer",
                    "group": "navigation@3"
                },
                {
                    "when": "resourceLangId == ballerina && isPersistModelActive",
                    "command": "ballerina.view.entityDiagram",
                    "group": "navigation@3"
                },
                {
                    "when": "isBallerinaDiagram",
                    "command": "ballerina.show.source",
                    "group": "navigation@4"
                },
                {
                    "when": "isBalVisualizerActive && showBalGoToSource",
                    "command": "ballerina.show.source",
                    "group": "navigation@4",
                    "title": "Show Source"
                },
                {
                    "command": "ballerina.open.ai.panel",
                    "group": "navigation@1",
                    "when": "resourceLangId == ballerina || isBallerinaDiagram || (isBalVisualizerActive && isBIProject)",
                    "title": "Open AI Panel"
                },
                {
                    "command": "BI.project.run",
                    "group": "navigation@2",
                    "title": "Run Integration",
                    "when": "isBalVisualizerActive && isBIProject"
                },
                {
                    "command": "BI.project.debug",
                    "group": "navigation@3",
                    "title": "Debug Integration",
                    "when": "isBalVisualizerActive && isBIProject"
                }
            ],
            "notebook/toolbar": [
                {
                    "command": "ballerina.notebook.restartNotebook",
                    "title": "Restart Notebook",
                    "group": "navigation@1",
                    "when": "notebookType == 'ballerina-notebook'"
                },
                {
                    "command": "ballerina.notebook.openVariableView",
                    "title": "Variables",
                    "group": "navigation@2",
                    "when": "notebookType == 'ballerina-notebook'"
                },
                {
                    "command": "ballerina.notebook.openOutlineView",
                    "title": "Outline",
                    "group": "navigation@3",
                    "when": "notebookType == 'ballerina-notebook'"
                }
            ],
            "notebook/cell/execute": [
                {
                    "command": "ballerina.notebook.debug",
                    "title": "Debug",
                    "group": "navigation@1",
                    "when": "notebookType == 'ballerina-notebook' && isNotebookDebugModeEnabled"
                }
            ],
            "explorer/context": [
                {
                    "command": "ballerina.project.run",
                    "group": "Ballerina",
                    "when": "resourceLangId == ballerina"
                }
            ],
            "commandPalette": [
                {
                    "command": "ballerina.new.module",
                    "when": "editorLangId != ballerina && !isBallerinaDiagram"
                },
                {
                    "command": "ballerina.show.source",
                    "when": "editorLangId != ballerina && !isBallerinaDiagram"
                },
                {
                    "command": "ballerina.show.visualizer",
                    "when": "editorLangId == ballerina"
                },
                {
                    "command": "ballerina.source.debug",
                    "when": "editorLangId != ballerina && !isBallerinaDiagram"
                },
                {
                    "command": "ballerina.notebook.createNotebook"
                },
                {
                    "command": "ballerina.view.entityDiagram",
                    "when": "isPersistModelActive"
                }
            ]
        },
        "notebooks": [
            {
                "id": "ballerina-notebook",
                "type": "ballerina-notebook",
                "displayName": "Ballerina Notebook",
                "selector": [
                    {
                        "filenamePattern": "*.balnotebook"
                    }
                ]
            }
        ],
        "notebookRenderer": [
            {
                "id": "ballerina-notebook-renderer",
                "displayName": "Ballerina Notebook Renderer",
                "entrypoint": "resources/jslibs/NotebookRenderer.js",
                "mimeTypes": [
                    "ballerina-notebook/json-view",
                    "ballerina-notebook/table-view",
                    "ballerina-notebook/xml-view"
                ]
            }
        ],
        "icons": {
            "distro-new-module": {
                "description": "new-module",
                "default": {
                    "fontPath": "./resources/font-wso2-vscode/dist/wso2-vscode.woff",
                    "fontCharacter": "\\f135"
                }
            },
            "distro-refresh": {
                "description": "refresh",
                "default": {
                    "fontPath": "./resources/codicons/codicon.ttf",
                    "fontCharacter": "\\eb37"
                }
            },
            "distro-new-file": {
                "description": "new-file",
                "default": {
                    "fontPath": "./resources/codicons/codicon.ttf",
                    "fontCharacter": "\\ea7f"
                }
            },
            "distro-new-folder": {
                "description": "new-folder",
                "default": {
                    "fontPath": "./resources/codicons/codicon.ttf",
                    "fontCharacter": "\\ea80"
                }
            },
            "distro-delete": {
                "description": "delete",
                "default": {
                    "fontPath": "./resources/font-wso2-vscode/dist/wso2-vscode.woff",
                    "fontCharacter": "\\f114"
                }
            },
            "distro-design-view": {
                "description": "design-view",
                "default": {
                    "fontPath": "./resources/font-wso2-vscode/dist/wso2-vscode.woff",
                    "fontCharacter": "\\f16b"
                }
            },
            "distro-start": {
                "description": "start",
                "default": {
                    "fontPath": "./resources/font-wso2-vscode/dist/wso2-vscode.woff",
                    "fontCharacter": "\\f119"
                }
            },
            "distro-debug": {
                "description": "debug",
                "default": {
                    "fontPath": "./resources/font-wso2-vscode/dist/wso2-vscode.woff",
                    "fontCharacter": "\\f16e"
                }
            },
            "distro-source-view": {
                "description": "source-view",
                "default": {
                    "fontPath": "./resources/font-wso2-vscode/dist/wso2-vscode.woff",
                    "fontCharacter": "\\f149"
                }
            },
            "distro-persist-diagram": {
                "description": "persist-diagram",
                "default": {
                    "fontPath": "./resources/font-wso2-vscode/dist/wso2-vscode.woff",
                    "fontCharacter": "\\f132"
                }
            },
            "distro-cached-rounded": {
                "description": "cached-rounded",
                "default": {
                    "fontPath": "./resources/font-wso2-vscode/dist/wso2-vscode.woff",
                    "fontCharacter": "\\f106"
                }
            },
            "distro-cached-round": {
                "description": "cached-round",
                "default": {
                    "fontPath": "./resources/font-wso2-vscode/dist/wso2-vscode.woff",
                    "fontCharacter": "\\f107"
                }
            },
            "distro-fit-to-screen": {
                "description": "fit-to-screen",
                "default": {
                    "fontPath": "./resources/font-wso2-vscode/dist/wso2-vscode.woff",
                    "fontCharacter": "\\f120"
                }
            },
            "distro-explicit-outlined": {
                "description": "explicit-outlined",
                "default": {
                    "fontPath": "./resources/font-wso2-vscode/dist/wso2-vscode.woff",
                    "fontCharacter": "\\f11f"
                }
            },
            "distro-error-icon": {
                "description": "error-icon",
                "default": {
                    "fontPath": "./resources/font-wso2-vscode/dist/wso2-vscode.woff",
                    "fontCharacter": "\\f11c"
                }
            },
            "distro-error-outline": {
                "description": "error-outline",
                "default": {
                    "fontPath": "./resources/font-wso2-vscode/dist/wso2-vscode.woff",
                    "fontCharacter": "\\f11d"
                }
            },
            "distro-symbol-struct-icon": {
                "description": "symbol-struct-icon",
                "default": {
                    "fontPath": "./resources/font-wso2-vscode/dist/wso2-vscode.woff",
                    "fontCharacter": "\\f13d"
                }
            },
            "distro-add-circle-outline": {
                "description": "add-circle-outline",
                "default": {
                    "fontPath": "./resources/font-wso2-vscode/dist/wso2-vscode.woff",
                    "fontCharacter": "\\f102"
                }
            },
            "distro-radio-button-checked": {
                "description": "radio-button-checked",
                "default": {
                    "fontPath": "./resources/font-wso2-vscode/dist/wso2-vscode.woff",
                    "fontCharacter": "\\f134"
                }
            },
            "distro-radio-button-unchecked": {
                "description": "radio-button-unchecked",
                "default": {
                    "fontPath": "./resources/font-wso2-vscode/dist/wso2-vscode.woff",
                    "fontCharacter": "\\f135"
                }
            },
            "distro-file-upload": {
                "description": "file-upload",
                "default": {
                    "fontPath": "./resources/font-wso2-vscode/dist/wso2-vscode.woff",
                    "fontCharacter": "\\f11f"
                }
            },
            "distro-file-submodule": {
                "description": "file-submodule",
                "default": {
                    "fontPath": "./resources/codicons/codicon.ttf",
                    "fontCharacter": "\\eaec"
                }
            },
            "distro-switch-project": {
                "description": "switch-project",
                "default": {
                    "fontPath": "./resources/codicons/codicon.ttf",
                    "fontCharacter": "\\ea77"
                }
            }
        },
        "uriHandler": {
            "protocol": "vscode"
        },
        "tasks": [
            {
                "type": "shell",
                "command": "bal",
                "args": [
                    "build"
                ],
                "options": {
                    "cwd": "${workspaceFolder}"
                },
                "group": {
                    "kind": "build",
                    "isDefault": true
                },
                "label": "bal: build",
                "detail": "Build Integration"
            }
        ]
    },
    "main": "./dist/extension",
    "scripts": {
        "clean": "del-cli ./dist ./out ./ballerina-*.vsix ./coverage ./.nyc_output",
        "compile": "webpack --mode production",
        "watch-ballerina": "webpack --mode none --watch",
        "test-compile": "tsc -p ./",
        "test": "pnpm run test-compile && node ./out/test/runTest.js",
        "e2e-test-setup": "npx extest get-vscode -c 1.83.1 && npx extest get-chromedriver -c 1.83.1 && npx extest install-vsix -f $(ls vsix/*.vsix)",
        "preui-test": "node -e \"const fs = require('fs'); if (fs.existsSync('test-resou')) { fs.unlinkSync('test-resou'); }\"",
        "e2e-test": "pnpm run test-compile && npx extest run-tests 'out/ui-test/*.test.js' --mocha_config ui-test/.mocharc.js -o ui-test/settings.json",
        "test-coverage": "cross-env COVER_CONFIG=html pnpm run test",
        "build-tm-grammar": "js-yaml grammar/ballerina-grammar/syntaxes/ballerina.tmLanguage.yaml > grammar/ballerina-grammar/syntaxes/ballerina.tmLanguage.json",
        "lint": "tslint --fix 'src/**/*{.ts,.tsx}'",
        "package": "if [ $isPreRelease = true ]; then vsce package --no-dependencies --pre-release; else vsce package --no-dependencies; fi",
        "copyFonts": "copyfiles -f ./node_modules/@wso2/font-wso2-vscode/dist/* ./resources/font-wso2-vscode/dist/",
        "copyVSIX": "copyfiles *.vsix ./vsix",
        "copyVSIXToRoot": "copyfiles -f ./vsix/*.vsix ../../..",
        "download-ls": "node scripts/download-ls.js",
        "build": "pnpm run compile && pnpm run lint && pnpm run postbuild",
        "rebuild": "pnpm run clean && pnpm run compile && pnpm run postbuild",
        "postbuild": "if [ \"$isPreRelease\" = \"true\" ]; then pnpm run download-ls --prerelease; else pnpm run download-ls; fi && pnpm run copyFonts && pnpm run copyJSLibs && pnpm run package && pnpm run copyVSIX",
        "copyJSLibs": "copyfiles -f ../ballerina-visualizer/build/*.js resources/jslibs"
    },
    "dependencies": {
        "@types/lodash": "^4.14.200",
        "@vscode/test-electron": "^2.4.0",
        "@vscode/vsce": "^2.22.0",
        "@wso2/ballerina-core": "workspace:*",
        "@wso2/ballerina-visualizer": "workspace:*",
        "@wso2/wso2-platform-core": "workspace:*",
        "@wso2/font-wso2-vscode": "workspace:*",
        "@wso2/syntax-tree": "workspace:*",
        "cors-anywhere": "^0.4.4",
        "del-cli": "^5.1.0",
        "file-uri-to-path": "^2.0.0",
        "glob": "^7.2.3",
        "handlebars": "~4.7.8",
        "lodash": "^4.17.21",
        "monaco-languageclient": "0.13.1-next.9",
        "node-fetch": "^3.3.2",
        "node-schedule": "^2.1.1",
        "portfinder": "^1.0.32",
        "source-map-support": "^0.5.21",
        "toml": "^3.0.0",
        "vscode-debugadapter": "^1.51.0",
        "vscode-debugprotocol": "^1.51.0",
        "vscode-extension-telemetry": "^0.1.7",
        "vscode-languageclient": "^8.1.0",
        "vscode-languageserver-protocol": "^3.17.5",
        "vscode-languageserver-types": "^3.17.5",
        "vscode-messenger": "^0.4.5",
        "vscode-messenger-common": "^0.4.5",
        "vscode-test": "^1.6.1",
        "vscode-uri": "^3.0.8",
        "xml-js": "^1.6.11",
        "xstate": "^4.38.3",
        "uuid": "^11.1.0",
        "jwt-decode": "^4.0.0",
        "dotenv": "~16.5.0"
    },
    "devDependencies": {
        "@sentry/webpack-plugin": "^1.20.1",
        "@types/chai": "^4.3.9",
        "@types/mocha": "~10.0.3",
        "@types/node": "^18.18.7",
        "@types/tcp-port-used": "^1.0.3",
        "@types/vscode": "^1.83.1",
        "@types/vscode-notebook-renderer": "~1.72.2",
        "axios": "^1.6.0",
        "chai": "^4.3.10",
        "copyfiles": "^2.4.1",
        "cross-env": "^7.0.3",
        "decache": "^4.6.2",
        "express": "^4.18.2",
        "istanbul": "^0.4.5",
        "js-yaml": "^4.1.0",
        "jwt-decode": "^3.1.2",
        "keytar": "^7.9.0",
        "kill-port": "2.0.1",
        "mocha": "^10.2.0",
        "pako": "^2.1.0",
        "pkce-challenge": "^3.1.0",
        "remap-istanbul": "^0.13.0",
        "rimraf": "^3.0.2",
        "tcp-port-used": "^1.0.2",
        "ts-loader": "^9.5.0",
        "tslint": "^6.1.3",
        "typescript": "5.8.3",
        "vscode-debugadapter-testsupport": "^1.51.0",
        "vscode-extension-tester": "^5.10.0",
        "vscode-messenger": "^0.4.4",
        "webpack": "^5.89.0",
        "webpack-cli": "^5.1.4",
        "webpack-merge-and-include-globally": "^2.3.4",
        "yarn": "^1.22.19",
        "adm-zip": "^0.5.16"
    },
    "extensionPack": [
        "be5invis.toml"
    ],
    "repository": {
        "type": "git",
        "url": "git+https://github.com/wso2/ballerina-plugin-vscode.git"
    }
}
