{
    "fileName": "/Users/gayanka/dev/wso2/test/test_24/functions.bal",
    "nodes": [
        {
            "id": "35248",
            "metadata": {
                "label": "Start",
                "data": {
                    "kind": "Function",
                    "label": "getName",
                    "isServiceFunction": false,
                    "return": "string?"
                }
            },
            "codedata": {
                "node": "EVENT_START",
                "lineRange": {
                    "fileName": "functions.bal",
                    "startLine": {
                        "line": 2,
                        "offset": 44
                    },
                    "endLine": {
                        "line": 7,
                        "offset": 1
                    }
                },
                "sourceCode": "# get randon name form this function each time\nisolated function getName() returns string? {\n    do {string[] names = [\"Alice\", \"Bob\", \"Charlie\", \"David\", \"Eve\"];\n\n    } on fail error err {\n    }\n}"
            },
            "returning": false,
            "flags": 0
        },
        {
            "id": "34942",
            "metadata": {
                "label": "ErrorHandler",
                "description": "Catch and handle errors"
            },
            "codedata": {
                "node": "ERROR_HANDLER",
                "lineRange": {
                    "fileName": "functions.bal",
                    "startLine": {
                        "line": 3,
                        "offset": 4
                    },
                    "endLine": {
                        "line": 6,
                        "offset": 5
                    }
                },
                "sourceCode": "do {string[] names = [\"Alice\", \"Bob\", \"Charlie\", \"David\", \"Eve\"];\n\n    } on fail error err {\n    }"
            },
            "returning": false,
            "branches": [
                {
                    "label": "Body",
                    "kind": "BLOCK",
                    "codedata": {
                        "node": "BODY",
                        "lineRange": {
                            "fileName": "functions.bal",
                            "startLine": {
                                "line": 3,
                                "offset": 7
                            },
                            "endLine": {
                                "line": 5,
                                "offset": 5
                            }
                        },
                        "sourceCode": "{string[] names = [\"Alice\", \"Bob\", \"Charlie\", \"David\", \"Eve\"];\n\n    }"
                    },
                    "repeatable": "ONE",
                    "children": [
                        {
                            "id": "35037",
                            "metadata": {
                                "label": "Declare Variable",
                                "description": "Assign a value to a variable"
                            },
                            "codedata": {
                                "node": "VARIABLE",
                                "lineRange": {
                                    "fileName": "functions.bal",
                                    "startLine": {
                                        "line": 3,
                                        "offset": 8
                                    },
                                    "endLine": {
                                        "line": 3,
                                        "offset": 69
                                    }
                                },
                                "sourceCode": "string[] names = [\"Alice\", \"Bob\", \"Charlie\", \"David\", \"Eve\"];"
                            },
                            "returning": false,
                            "properties": {
                                "expression": {
                                    "metadata": {
                                        "label": "Expression",
                                        "description": "Initialize with value"
                                    },
                                    "valueType": "ACTION_OR_EXPRESSION",
                                    "value": "[\"Alice\", \"Bob\", \"Charlie\", \"David\", \"Eve\"]",
                                    "optional": true,
                                    "editable": true,
                                    "advanced": false,
                                    "hidden": false
                                },
                                "variable": {
                                    "metadata": {
                                        "label": "Name",
                                        "description": "Name of the variable"
                                    },
                                    "valueType": "IDENTIFIER",
                                    "value": "names",
                                    "optional": false,
                                    "editable": false,
                                    "advanced": false,
                                    "hidden": false,
                                    "codedata": {
                                        "lineRange": {
                                            "fileName": "functions.bal",
                                            "startLine": {
                                                "line": 3,
                                                "offset": 17
                                            },
                                            "endLine": {
                                                "line": 3,
                                                "offset": 22
                                            }
                                        }
                                    }
                                },
                                "type": {
                                    "metadata": {
                                        "label": "Type",
                                        "description": "Type of the variable"
                                    },
                                    "valueType": "TYPE",
                                    "value": "string[]",
                                    "placeholder": "var",
                                    "optional": false,
                                    "editable": true,
                                    "advanced": false,
                                    "hidden": false,
                                    "codedata": {}
                                }
                            },
                            "flags": 0,
                            "suggested": true
                        }
                    ]
                },
                {
                    "label": "On Failure",
                    "kind": "BLOCK",
                    "codedata": {
                        "node": "ON_FAILURE",
                        "lineRange": {
                            "fileName": "functions.bal",
                            "startLine": {
                                "line": 5,
                                "offset": 24
                            },
                            "endLine": {
                                "line": 6,
                                "offset": 5
                            }
                        },
                        "sourceCode": "{\n    }"
                    },
                    "repeatable": "ZERO_OR_ONE",
                    "properties": {
                        "ignore": {
                            "metadata": {
                                "label": "Ignore",
                                "description": "Ignore the error value"
                            },
                            "valueType": "EXPRESSION",
                            "value": "false",
                            "optional": false,
                            "editable": true,
                            "advanced": false,
                            "hidden": false
                        },
                        "errorVariable": {
                            "metadata": {
                                "label": "Error Variable",
                                "description": "Name of the error variable"
                            },
                            "valueType": "IDENTIFIER",
                            "value": "err ",
                            "placeholder": "err",
                            "optional": false,
                            "editable": true,
                            "advanced": false,
                            "hidden": false
                        },
                        "errorType": {
                            "metadata": {
                                "label": "Error Type",
                                "description": "Type of the error"
                            },
                            "valueType": "TYPE",
                            "value": "error",
                            "placeholder": "error",
                            "optional": false,
                            "editable": true,
                            "advanced": false,
                            "hidden": false
                        }
                    },
                    "children": [],
                    "suggested": false
                }
            ],
            "flags": 0
        }
    ],
    "connections": [
        {
            "id": "34784",
            "metadata": {
                "label": "Agent",
                "description": "Represents an agent.",
                "icon": "https://bcentral-packageicons.azureedge.net/images/ballerina_ai_1.5.3.png"
            },
            "codedata": {
                "node": "AGENT",
                "org": "ballerina",
                "module": "ai",
                "object": "Agent",
                "symbol": "init",
                "lineRange": {
                    "fileName": "agents.bal",
                    "startLine": {
                        "line": 3,
                        "offset": 0
                    },
                    "endLine": {
                        "line": 5,
                        "offset": 2
                    }
                },
                "sourceCode": "final ai:Agent aiAgent = check new (\n    systemPrompt = {role: \"\", instructions: string ``}, model = aiWso2modelprovider, tools = [appendKey, getNameTool, mcpClient]\n);"
            },
            "returning": false,
            "properties": {
                "systemPrompt": {
                    "metadata": {
                        "label": "System Prompt",
                        "description": "The system prompt assigned to the agent"
                    },
                    "valueType": "EXPRESSION",
                    "valueTypeConstraint": "ai:SystemPrompt",
                    "value": "{role: \"\", instructions: string ``}",
                    "placeholder": "{role: \"\", instructions: \"\"}",
                    "optional": false,
                    "editable": true,
                    "advanced": false,
                    "hidden": false,
                    "codedata": {
                        "kind": "INCLUDED_FIELD",
                        "originalName": "systemPrompt"
                    },
                    "typeMembers": [
                        {
                            "type": "SystemPrompt",
                            "packageInfo": "ballerina:ai:1.5.3",
                            "packageName": "ai",
                            "kind": "RECORD_TYPE",
                            "selected": true
                        }
                    ],
                    "defaultValue": "{role: \"\", instructions: \"\"}"
                },
                "model": {
                    "metadata": {
                        "label": "Model",
                        "description": "The model used by the agent"
                    },
                    "valueType": "EXPRESSION",
                    "valueTypeConstraint": "ai:ModelProvider",
                    "value": "aiWso2modelprovider",
                    "placeholder": "object {}",
                    "optional": false,
                    "editable": true,
                    "advanced": false,
                    "hidden": false,
                    "codedata": {
                        "kind": "INCLUDED_FIELD",
                        "originalName": "model"
                    },
                    "typeMembers": [
                        {
                            "type": "ModelProvider",
                            "packageInfo": "ballerina:ai:1.5.3",
                            "packageName": "ai",
                            "kind": "OBJECT_TYPE",
                            "selected": false
                        }
                    ],
                    "defaultValue": "object {}"
                },
                "tools": {
                    "metadata": {
                        "label": "Tools",
                        "description": "The tools available for the agent"
                    },
                    "valueType": "EXPRESSION",
                    "valueTypeConstraint": "(ai:BaseToolKit|ai:ToolConfig|ai:FunctionTool)[]",
                    "value": "[appendKey, getNameTool, mcpClient]\n",
                    "placeholder": "[]",
                    "optional": true,
                    "editable": true,
                    "advanced": true,
                    "hidden": false,
                    "codedata": {
                        "kind": "INCLUDED_FIELD",
                        "originalName": "tools"
                    },
                    "typeMembers": [
                        {
                            "type": "BaseToolKit|ai",
                            "packageInfo": "",
                            "packageName": "",
                            "kind": "ARRAY_TYPE",
                            "selected": false
                        }
                    ],
                    "defaultValue": "[]"
                },
                "maxIter": {
                    "metadata": {
                        "label": "Maximum Iterations",
                        "description": "The maximum number of iterations the agent performs to complete the task.\nBy default, it is set to the number of tools + 1."
                    },
                    "valueType": "EXPRESSION",
                    "valueTypeConstraint": "\"INFER_TOOL_COUNT\"|int",
                    "placeholder": "\"INFER_TOOL_COUNT\"",
                    "optional": true,
                    "editable": true,
                    "advanced": true,
                    "hidden": false,
                    "codedata": {
                        "kind": "INCLUDED_FIELD",
                        "originalName": "maxIter"
                    },
                    "typeMembers": [
                        {
                            "type": "\"INFER_TOOL_COUNT\"",
                            "packageInfo": "",
                            "packageName": "",
                            "kind": "BASIC_TYPE",
                            "selected": false
                        },
                        {
                            "type": "int",
                            "packageInfo": "",
                            "packageName": "",
                            "kind": "BASIC_TYPE",
                            "selected": false
                        }
                    ],
                    "defaultValue": "\"INFER_TOOL_COUNT\""
                },
                "verbose": {
                    "metadata": {
                        "label": "Verbose",
                        "description": "Specifies whether verbose logging is enabled"
                    },
                    "valueType": "EXPRESSION",
                    "valueTypeConstraint": "boolean",
                    "placeholder": "false",
                    "optional": true,
                    "editable": true,
                    "advanced": true,
                    "hidden": false,
                    "codedata": {
                        "kind": "INCLUDED_FIELD",
                        "originalName": "verbose"
                    },
                    "typeMembers": [
                        {
                            "type": "boolean",
                            "packageInfo": "",
                            "packageName": "",
                            "kind": "BASIC_TYPE",
                            "selected": false
                        }
                    ],
                    "defaultValue": "false"
                },
                "memory": {
                    "metadata": {
                        "label": "Memory",
                        "description": "The memory used by the agent to store and manage conversation history"
                    },
                    "valueType": "EXPRESSION",
                    "valueTypeConstraint": "ai:Memory|()",
                    "placeholder": "()",
                    "optional": true,
                    "editable": true,
                    "advanced": true,
                    "hidden": false,
                    "codedata": {
                        "kind": "INCLUDED_FIELD",
                        "originalName": "memory"
                    },
                    "typeMembers": [
                        {
                            "type": "Memory",
                            "packageInfo": "ballerina:ai:1.5.3",
                            "packageName": "ai",
                            "kind": "OBJECT_TYPE",
                            "selected": false
                        },
                        {
                            "type": "()",
                            "packageInfo": "",
                            "packageName": "",
                            "kind": "BASIC_TYPE",
                            "selected": false
                        }
                    ],
                    "defaultValue": "()"
                },
                "checkError": {
                    "metadata": {
                        "label": "Check Error",
                        "description": "Terminate on error"
                    },
                    "valueType": "FLAG",
                    "value": true,
                    "optional": false,
                    "editable": false,
                    "advanced": true,
                    "hidden": true
                },
                "scope": {
                    "metadata": {
                        "label": "Connection Scope",
                        "description": "Scope of the connection, Global or Local"
                    },
                    "valueType": "ENUM",
                    "value": "Global",
                    "optional": false,
                    "editable": true,
                    "advanced": true,
                    "hidden": true
                },
                "variable": {
                    "metadata": {
                        "label": "Variable Name",
                        "description": "Name of the variable"
                    },
                    "valueType": "IDENTIFIER",
                    "value": "aiAgent",
                    "optional": false,
                    "editable": false,
                    "advanced": false,
                    "hidden": false,
                    "codedata": {
                        "lineRange": {
                            "fileName": "agents.bal",
                            "startLine": {
                                "line": 3,
                                "offset": 15
                            },
                            "endLine": {
                                "line": 3,
                                "offset": 22
                            }
                        }
                    }
                },
                "type": {
                    "metadata": {
                        "label": "Variable Type",
                        "description": "Type of the variable"
                    },
                    "valueType": "TYPE",
                    "value": "ai:Agent",
                    "placeholder": "var",
                    "optional": false,
                    "editable": true,
                    "advanced": false,
                    "hidden": false,
                    "codedata": {}
                }
            },
            "flags": 1
        },
        {
            "id": "35796",
            "metadata": {
                "label": "getDefaultModelProvider",
                "description": "Creates a default model provider based on the provided `wso2ProviderConfig`.",
                "icon": "https://bcentral-packageicons.azureedge.net/images/ballerina_ai_1.5.3.png"
            },
            "codedata": {
                "node": "FUNCTION_CALL",
                "org": "ballerina",
                "module": "ai",
                "packageName": "ai",
                "symbol": "getDefaultModelProvider",
                "version": "1.5.3",
                "lineRange": {
                    "fileName": "connections.bal",
                    "startLine": {
                        "line": 4,
                        "offset": 0
                    },
                    "endLine": {
                        "line": 4,
                        "offset": 84
                    }
                },
                "sourceCode": "final ai:Wso2ModelProvider aiWso2modelprovider = check ai:getDefaultModelProvider();"
            },
            "returning": false,
            "properties": {
                "checkError": {
                    "metadata": {
                        "label": "Check Error",
                        "description": "Trigger error flow"
                    },
                    "valueType": "FLAG",
                    "value": true,
                    "optional": false,
                    "editable": true,
                    "advanced": true,
                    "hidden": true
                },
                "variable": {
                    "metadata": {
                        "label": "Result",
                        "description": "Name of the result variable"
                    },
                    "valueType": "IDENTIFIER",
                    "value": "aiWso2modelprovider",
                    "optional": false,
                    "editable": false,
                    "advanced": false,
                    "hidden": false,
                    "codedata": {
                        "lineRange": {
                            "fileName": "connections.bal",
                            "startLine": {
                                "line": 4,
                                "offset": 27
                            },
                            "endLine": {
                                "line": 4,
                                "offset": 46
                            }
                        }
                    }
                },
                "type": {
                    "metadata": {
                        "label": "Result Type",
                        "description": "Type of the variable"
                    },
                    "valueType": "TYPE",
                    "value": "ai:Wso2ModelProvider",
                    "placeholder": "var",
                    "optional": false,
                    "editable": false,
                    "advanced": false,
                    "hidden": false,
                    "codedata": {}
                }
            },
            "flags": 1
        },
        {
            "id": "34766",
            "metadata": {
                "label": "New Connection",
                "description": "Ballerina Redis connector provides the capability to access Redis cache.\nThis connector lets you to perform operations to access and manipulate key-value data stored in a Redis database. \n",
                "icon": "https://bcentral-packageicons.azureedge.net/images/ballerinax_redis_3.1.0.png"
            },
            "codedata": {
                "node": "NEW_CONNECTION",
                "org": "ballerinax",
                "module": "redis",
                "object": "Client",
                "symbol": "init",
                "lineRange": {
                    "fileName": "connections.bal",
                    "startLine": {
                        "line": 3,
                        "offset": 0
                    },
                    "endLine": {
                        "line": 3,
                        "offset": 46
                    }
                },
                "sourceCode": "final redis:Client redisClient = check new ();"
            },
            "returning": false,
            "properties": {
                "connection": {
                    "metadata": {
                        "label": "Connection Type",
                        "description": "Connection configurations of the Redis server. This can be either a single URI or a set of parameters"
                    },
                    "valueType": "EXPRESSION",
                    "valueTypeConstraint": "redis:ConnectionUri|redis:ConnectionParams",
                    "placeholder": "\"\"",
                    "optional": true,
                    "editable": true,
                    "advanced": true,
                    "hidden": false,
                    "codedata": {
                        "kind": "INCLUDED_FIELD",
                        "originalName": "connection"
                    },
                    "typeMembers": [
                        {
                            "type": "ConnectionParams",
                            "packageInfo": "ballerinax:redis:3.1.0",
                            "packageName": "redis",
                            "kind": "RECORD_TYPE",
                            "selected": false
                        },
                        {
                            "type": "ConnectionUri",
                            "packageInfo": "ballerinax:redis:3.1.0",
                            "packageName": "redis",
                            "kind": "BASIC_TYPE",
                            "selected": false
                        }
                    ],
                    "defaultValue": "\"\""
                },
                "connectionPooling": {
                    "metadata": {
                        "label": "Connection Pooling Enabled",
                        "description": "Flag to indicate whether connection pooling is enabled"
                    },
                    "valueType": "EXPRESSION",
                    "valueTypeConstraint": "boolean",
                    "placeholder": "false",
                    "optional": true,
                    "editable": true,
                    "advanced": true,
                    "hidden": false,
                    "codedata": {
                        "kind": "INCLUDED_FIELD",
                        "originalName": "connectionPooling"
                    },
                    "typeMembers": [
                        {
                            "type": "boolean",
                            "packageInfo": "",
                            "packageName": "",
                            "kind": "BASIC_TYPE",
                            "selected": false
                        }
                    ],
                    "defaultValue": "false"
                },
                "isClusterConnection": {
                    "metadata": {
                        "label": "Cluster Mode Enabled",
                        "description": "Flag to indicate whether the connection is a cluster connection"
                    },
                    "valueType": "EXPRESSION",
                    "valueTypeConstraint": "boolean",
                    "placeholder": "false",
                    "optional": true,
                    "editable": true,
                    "advanced": true,
                    "hidden": false,
                    "codedata": {
                        "kind": "INCLUDED_FIELD",
                        "originalName": "isClusterConnection"
                    },
                    "typeMembers": [
                        {
                            "type": "boolean",
                            "packageInfo": "",
                            "packageName": "",
                            "kind": "BASIC_TYPE",
                            "selected": false
                        }
                    ],
                    "defaultValue": "false"
                },
                "secureSocket": {
                    "metadata": {
                        "label": "Secure Socket Configurations",
                        "description": "Configurations related to SSL/TLS encryption"
                    },
                    "valueType": "EXPRESSION",
                    "valueTypeConstraint": "redis:SecureSocket",
                    "placeholder": "{}",
                    "optional": true,
                    "editable": true,
                    "advanced": true,
                    "hidden": false,
                    "codedata": {
                        "kind": "INCLUDED_FIELD",
                        "originalName": "secureSocket"
                    },
                    "typeMembers": [
                        {
                            "type": "SecureSocket",
                            "packageInfo": "ballerinax:redis:3.1.0",
                            "packageName": "redis",
                            "kind": "RECORD_TYPE",
                            "selected": false
                        }
                    ],
                    "defaultValue": "{}"
                },
                "checkError": {
                    "metadata": {
                        "label": "Check Error",
                        "description": "Terminate on error"
                    },
                    "valueType": "FLAG",
                    "value": true,
                    "optional": false,
                    "editable": false,
                    "advanced": true,
                    "hidden": true
                },
                "scope": {
                    "metadata": {
                        "label": "Connection Scope",
                        "description": "Scope of the connection, Global or Local"
                    },
                    "valueType": "ENUM",
                    "value": "Global",
                    "optional": false,
                    "editable": true,
                    "advanced": true,
                    "hidden": true
                },
                "variable": {
                    "metadata": {
                        "label": "Connection Name",
                        "description": "Name of the variable"
                    },
                    "valueType": "IDENTIFIER",
                    "value": "redisClient",
                    "optional": false,
                    "editable": false,
                    "advanced": false,
                    "hidden": false,
                    "codedata": {
                        "lineRange": {
                            "fileName": "connections.bal",
                            "startLine": {
                                "line": 3,
                                "offset": 19
                            },
                            "endLine": {
                                "line": 3,
                                "offset": 30
                            }
                        }
                    }
                },
                "type": {
                    "metadata": {
                        "label": "Connection Type",
                        "description": "Type of the variable"
                    },
                    "valueType": "TYPE",
                    "value": "redis:Client",
                    "placeholder": "var",
                    "optional": false,
                    "editable": false,
                    "advanced": false,
                    "hidden": true,
                    "codedata": {}
                }
            },
            "flags": 1
        }
    ]
}
